# .github/workflows/ios.yml
name: Build iOS
on: [push]

jobs:
  build:
    runs-on: macos-14          # macOS Sonoma + Xcode 15
    steps:
      # 1. Récupération du code
      - uses: actions/checkout@v4

      # 2. Installation de Flutter
      - uses: subosito/flutter-action@v2
        with:
          # optionnel : channel: "stable"
          cache: true

      # 3. Préparation Flutter
      - run: flutter clean
      - run: flutter pub get

      # 4. Import des fichiers de signature
      - name: Install codesign files
        run: |
          # recrée le p12 et le provisioning profile
          printf '%s' "$CERT_BASE64"    | base64 -d > cert.p12
          printf '%s' "$PROFILE_BASE64" | base64 -d > profile.mobileprovision
           echo "Runner MD5: $(md5sum cert.p12 | cut -d' ' -f1)"   # <── AJOUT
          # supprime tout éventuel \r caché dans le mot de passe
          CLEAN_PASS=$(printf '%s' "$CERT_PASSWORD" | tr -d '\r')

          # import du certificat (ajout aux trousseaux système + login)
          security import cert.p12 -P "$CLEAN_PASS" -A

          # place le provisioning profile au bon endroit
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
        env:
          CERT_BASE64:    ${{ secrets.CERT_BASE64 }}
          PROFILE_BASE64: ${{ secrets.PROFILE_BASE64 }}
          CERT_PASSWORD:  ${{ secrets.CERT_PASSWORD }}

      # 5. Compilation et signature de l’IPA
      - name: Flutter build (ipa)
        run: flutter build ipa --release      # <-- plus de --no-codesign

      # 6. Export du résultat
      - uses: actions/upload-artifact@v4
        with:
          name: ios-release
          path: build/ios/ipa
